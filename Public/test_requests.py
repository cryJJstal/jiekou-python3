#!/usr/local/bin/python#-*- coding:utf-8 -*-from importlib import reloadimport requests,jsonfrom Public.log import LOG,logger# import sys# reload(sys)# sys.setdefaultencoding('utf-8')@logger('requests封装')class requ():    def __init__(self):        self.headers = { 'charset': 'utf-8',                'Accept-Encoding': 'gzip',                'content-type':'application/x-www-form-urlencoded',                'User-Agent': 'Mozilla/5.0 (Linux; Android 5.1.1; vivo Xplay5A Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/39.0.0.0 Mobile Safari/537.36 MicroMessenger/7.0.3.1400(0x2700033B) Process/appbrand0 NetType/WIFI Language/zh_CN',                'Host':'www.dev.qi-e.tv',                'Connection': 'Keep-Alive'}    def get(self, url,params):#get消息        try:            r = requests.get(url, params=params,headers=self.headers)            r.encoding = 'UTF-8'            json_response = json.loads(r.text)            return {'code':0,'result':json_response}        except Exception as e:            LOG.info('get请求出错，出错原因:%s'%e)            return {'code': 1, 'result': 'get请求出错，出错原因:%s'%e}    def post(self, url, params):#post消息        data = json.loads(params.pop())        try:            r =requests.post(url,data=data,headers=self.headers)            json_response = json.loads(r.text)            status_code=r.status_code            return {'code': status_code, 'result': json_response}        except Exception as e:            LOG.info('post请求出错，出错原因:%s' % e)            return {'code': status_code, 'result': 'post请求出错，出错原因:%s' % e}    def delfile(self,url,params):#删除的请求        try:            del_word=requests.delete(url,params=params,headers=self.headers)            json_response=json.loads(del_word.text)            return {'code': 0, 'result': json_response}        except Exception as e:            LOG.info('del请求出错，出错原因:%s' % e)            return {'code': 1, 'result': 'del请求出错，出错原因:%s' % e}    def putfile(self,url,params):#put请求        try:            data=json.dumps(params)            me=requests.put(url,data)            json_response=json.loads(me.text)            return {'code': 0, 'result': json_response}        except Exception as e:            LOG.info('put请求出错，出错原因:%s' % e)            return {'code': 1, 'result': 'put请求出错，出错原因:%s' % e}